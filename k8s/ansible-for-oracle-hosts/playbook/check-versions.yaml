- name: Check Kubernetes stack binary paths and versions
  hosts: all
  gather_facts: no

  vars:
    binaries:
      - name: kubelet
        version_cmd: "kubelet --version"
        version_regex: 'Kubernetes v(\\S+)'
      - name: kubeadm
        version_cmd: "kubeadm version -o short"
        version_regex: 'v(\\S+)'
      - name: kubectl
        version_cmd: "kubectl version --client -o json | jq -r .clientVersion.gitVersion"
        version_regex: 'v(\\S+)'
      - name: containerd
        version_cmd: "containerd --version"
        version_regex: 'containerd\\s+(\\S+)'
      - name: runc
        version_cmd: "runc --version"
        version_regex: 'runc\\s+version\\s+(\\S+)'
      - name: crictl
        version_cmd: "crictl --version"
        version_regex: 'crictl version (\\S+)'
      - name: kube-proxy
        version_cmd: "kube-proxy --version"
        version_regex: 'Kubernetes v(\\S+)'

  tasks:

    - name: Find binary with `which`
      shell: "which {{ item.name }} || true"
      register: binary_paths
      loop: "{{ binaries }}"
      changed_when: false

    - name: Resolve symlink to get real binary path
      shell: "readlink -f {{ item.stdout }}"
      register: resolved_paths
      loop: "{{ binary_paths.results }}"
      when: item.stdout != ""
      changed_when: false

    - name: Run version command
      shell: "{{ binaries[loop.index0].version_cmd }}"
      register: version_output
      loop: "{{ resolved_paths.results }}"
      when: item.stdout != ""
      changed_when: false
      failed_when: false

    - name: Build final results with name, path, and version
      set_fact:
        k8s_binaries: >-
          {{
            k8s_binaries | default({}) | combine({
              item.item.item.name: {
                "path": item.item.stdout,
                "real_path": item.stdout,
                "version": (version_output.results[loop.index0].stdout | regex_search(item.item.item.version_regex, '\\1') | default("N/A"))
              }
            })
          }}
      loop: "{{ resolved_paths.results }}"
      when: item.stdout != ""

    - name: Show per-host binary details
      debug:
        var: k8s_binaries

---
- name: Install Kubernetes Dependencies
  hosts: all
  become: true
  vars:
    kubernetes_repo_version: "v1.24"
    centos_version: "7"
  tasks:
    # Clean up any existing Docker CE or Kubernetes repos

    - name: Remove Docker CE repo if it exists
      yum_repository:
        name: docker-ce-stable
        state: absent

    - name: Remove Kubernetes repo if it exists
      yum_repository:
        name: kubernetes
        state: absent

    # Install required packages

    - name: Install required packages
      yum:
        name:
          - jq
          - vim
          - htop
          - curl
          - net-tools
          - yum-utils
          - iptables
          - iproute
        state: present
        update_cache: yes

    # Setup Docker CE repo & install containerd

    - name: Add Docker CE repo
      yum_repository:
        name: docker-ce-stable
        description: Docker CE YUM Repository
        baseurl: https://download.docker.com/linux/centos/{{centos_version}}/x86_64/stable/
        enabled: 1
        gpgcheck: 1
        gpgkey: https://download.docker.com/linux/centos/gpg

    - name: Install Docker CE packages
      yum:
        name:
          - containerd.io
        state: present
        update_cache: yes
        exclude: "*kubernetes*"

    # Setup Kubernetes repo and install packages

    - name: Add Kubernetes repo
      yum_repository:
        name: kubernetes
        description: Kubernetes YUM Repository
        baseurl: https://pkgs.k8s.io/core:/stable:/{{kubernetes_repo_version}}/rpm/
        enabled: 1
        gpgcheck: 1
        gpgkey: https://pkgs.k8s.io/core:/stable:/{{kubernetes_repo_version}}/rpm/repodata/repomd.xml.key

    - name: Install Kubernetes packages
      yum:
        name:
          - kubelet
          - kubeadm
          - cri-tools
          - kubernetes-cni
        state: present
        update_cache: yes
        exclude: "*docker*"

    # Configure containerd (required CRI for Kubernetes)

    - name: Create containerd configuration directory
      file:
        path: /etc/containerd
        state: directory

    - name: Generate default containerd config
      command: containerd config default > /etc/containerd/config.toml

    - name: Comment out any line containing disabled_plugins
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^\s*disabled_plugins.*'
        line: '# \g<0>'
        backrefs: yes

    - name: Enable SystemdCgroup in containerd
      replace:
        path: /etc/containerd/config.toml
        regexp: '^(\s*SystemdCgroup\s*=\s*)false'
        replace: '\1true'

    - name: Restart and enable containerd service
      systemd:
        name: containerd
        state: restarted
        enabled: true

    - name: Ensure containerd is running
      systemd:
        name: containerd
        state: started
        enabled: true

    # Enable and start kubelet service

    - name: Reload systemd daemon
      command: systemctl daemon-reexec
      ignore_errors: true

    - name: Reload systemd daemon
      command: systemctl daemon-reload
      ignore_errors: true

    - name: Enable kubelet
      systemd:
        name: kubelet
        enabled: true
        state: stopped

    # Helm installation
    - name: Download Helm installation script
      get_url:
        url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        dest: /tmp/get_helm.sh
        mode: "0755"

    - name: Run Helm installation script
      command: /tmp/get_helm.sh
      args:
        creates: /usr/local/bin/helm

    - name: Verify Helm installation
      command: helm version --short
      register: helm_version
      changed_when: false

- name: Install special Kubernetes dependencies for control planes
  hosts: master
  become: true
  tasks:
    - name: Install kubectl for control planes
      yum:
        name:
          - kubectl
        state: present
        update_cache: yes
        exclude: "*docker*"
